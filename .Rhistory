ggplot(lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(position = "stack", y = (..count..)/sum(..count..))
#ggplot(data=borrowers[borrowers$loan_status =="3",]) + geom_bar(aes(x=income_range_description, y=(..count..)/sum(..count..)), fill="lavender") + theme_bw() + xlab("Income Range") + ylab("Percentage") + ggtitle("Bar Chart of Borrowers' Income Range with Defaulted Loan")
category_weekday <- weekdays(lng$loan_origination_date)
ggplot(lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(aes(position = "stack", y = (..count..)/sum(..count..)))
# category_month <- month(lng$loan_origination_date)
# ggplot(lng, aes(x=category_month, fill = loan_status)) + geom_bar(position = "stack")
#
# category_quarter <- quarter(lng$loan_origination_date)
# ggplot(lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(position = "stack")
#ggplot(data=borrowers[borrowers$loan_status =="3",]) + geom_bar(aes(x=income_range_description, y=(..count..)/sum(..count..)), fill="lavender") + theme_bw() + xlab("Income Range") + ylab("Percentage") + ggtitle("Bar Chart of Borrowers' Income Range with Defaulted Loan")
category_weekday <- weekdays(lng$loan_origination_date)
ggplot(lng, aes(x=category_month, fill = loan_status)) + geom_bar(position = "stack")
ggplot(lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(aes(position = "stack", y = (..count..)/sum(..count..)))
# category_month <- month(lng$loan_origination_date)
# ggplot(lng, aes(x=category_month, fill = loan_status)) + geom_bar(position = "stack")
#
# category_quarter <- quarter(lng$loan_origination_date)
# ggplot(lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(position = "stack")
#ggplot(data=borrowers[borrowers$loan_status =="3",]) + geom_bar(aes(x=income_range_description, y=(..count..)/sum(..count..)), fill="lavender") + theme_bw() + xlab("Income Range") + ylab("Percentage") + ggtitle("Bar Chart of Borrowers' Income Range with Defaulted Loan")
category_weekday <- weekdays(lng$loan_origination_date)
ggplot(lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(position = "stack")
ggplot(lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(aes(position = "stack", y = (..count..)/sum(..count..)))
# category_month <- month(lng$loan_origination_date)
# ggplot(lng, aes(x=category_month, fill = loan_status)) + geom_bar(position = "stack")
#
# category_quarter <- quarter(lng$loan_origination_date)
# ggplot(lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(position = "stack")
#ggplot(data=borrowers[borrowers$loan_status =="3",]) + geom_bar(aes(x=income_range_description, y=(..count..)/sum(..count..)), fill="lavender") + theme_bw() + xlab("Income Range") + ylab("Percentage") + ggtitle("Bar Chart of Borrowers' Income Range with Defaulted Loan")
category_weekday <- weekdays(lng$loan_origination_date)
ggplot(lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(position = "stack")
ggplot(lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(position = "stack")+ scale_y_continuous(labels=scales::percent) + ylab("relative frequencies")
# category_month <- month(lng$loan_origination_date)
# ggplot(lng, aes(x=category_month, fill = loan_status)) + geom_bar(position = "stack")
#
# category_quarter <- quarter(lng$loan_origination_date)
# ggplot(lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(position = "stack")
#ggplot(data=borrowers[borrowers$loan_status =="3",]) + geom_bar(aes(x=income_range_description, y=(..count..)/sum(..count..)), fill="lavender") + theme_bw() + xlab("Income Range") + ylab("Percentage") + ggtitle("Bar Chart of Borrowers' Income Range with Defaulted Loan")
category_weekday <- weekdays(lng$loan_origination_date)
ggplot(lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(position = "stack")
ggplot(lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(position = "stack") + scale_y_continuous(labels=scales::percent)
# category_month <- month(lng$loan_origination_date)
# ggplot(lng, aes(x=category_month, fill = loan_status)) + geom_bar(position = "stack")
#
# category_quarter <- quarter(lng$loan_origination_date)
# ggplot(lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(position = "stack")
#ggplot(data=borrowers[borrowers$loan_status =="3",]) + geom_bar(aes(x=income_range_description, y=(..count..)/sum(..count..)), fill="lavender") + theme_bw() + xlab("Income Range") + ylab("Percentage") + ggtitle("Bar Chart of Borrowers' Income Range with Defaulted Loan")
category_weekday <- weekdays(lng$loan_origination_date)
ggplot(data = lng, aes(x=category_weekday)) + geom_bar(stat="count")
# category_month <- month(lng$loan_origination_date)
# ggplot(lng, aes(x=category_month, fill = loan_status)) + geom_bar(position = "stack")
#
# category_quarter <- quarter(lng$loan_origination_date)
# ggplot(lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(position = "stack")
#ggplot(data=borrowers[borrowers$loan_status =="3",]) + geom_bar(aes(x=income_range_description, y=(..count..)/sum(..count..)), fill="lavender") + theme_bw() + xlab("Income Range") + ylab("Percentage") + ggtitle("Bar Chart of Borrowers' Income Range with Defaulted Loan")
category_weekday <- weekdays(lng$loan_origination_date)
ggplot(data = lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(stat="count")
# category_month <- month(lng$loan_origination_date)
# ggplot(lng, aes(x=category_month, fill = loan_status)) + geom_bar(position = "stack")
#
# category_quarter <- quarter(lng$loan_origination_date)
# ggplot(lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(position = "stack")
#ggplot(data=borrowers[borrowers$loan_status =="3",]) + geom_bar(aes(x=income_range_description, y=(..count..)/sum(..count..)), fill="lavender") + theme_bw() + xlab("Income Range") + ylab("Percentage") + ggtitle("Bar Chart of Borrowers' Income Range with Defaulted Loan")
category_weekday <- weekdays(lng$loan_origination_date)
ggplot(data = lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(stat="count") + theme(axis.text.x = element_text(angle = 90,hjust =0 )
# category_month <- month(lng$loan_origination_date)
# ggplot(lng, aes(x=category_month, fill = loan_status)) + geom_bar(position = "stack")
#
# category_quarter <- quarter(lng$loan_origination_date)
# ggplot(lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(position = "stack")
#ggplot(data=borrowers[borrowers$loan_status =="3",]) + geom_bar(aes(x=income_range_description, y=(..count..)/sum(..count..)), fill="lavender") + theme_bw() + xlab("Income Range") + ylab("Percentage") + ggtitle("Bar Chart of Borrowers' Income Range with Defaulted Loan")
category_weekday <- weekdays(lng$loan_origination_date)
ggplot(data = lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(stat="count")
# category_month <- month(lng$loan_origination_date)
# ggplot(lng, aes(x=category_month, fill = loan_status)) + geom_bar(position = "stack")
#
# category_quarter <- quarter(lng$loan_origination_date)
# ggplot(lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(position = "stack")
#ggplot(data=borrowers[borrowers$loan_status =="3",]) + geom_bar(aes(x=income_range_description, y=(..count..)/sum(..count..)), fill="lavender") + theme_bw() + xlab("Income Range") + ylab("Percentage") + ggtitle("Bar Chart of Borrowers' Income Range with Defaulted Loan")
category_weekday <- weekdays(lng$loan_origination_date)
ggplot(data = lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(stat="count", position = "fill")
# category_month <- month(lng$loan_origination_date)
# ggplot(lng, aes(x=category_month, fill = loan_status)) + geom_bar(position = "stack")
#
# category_quarter <- quarter(lng$loan_origination_date)
# ggplot(lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(position = "stack")
#ggplot(data=borrowers[borrowers$loan_status =="3",]) + geom_bar(aes(x=income_range_description, y=(..count..)/sum(..count..)), fill="lavender") + theme_bw() + xlab("Income Range") + ylab("Percentage") + ggtitle("Bar Chart of Borrowers' Income Range with Defaulted Loan")
category_weekday <- weekdays(lng$loan_origination_date)
ggplot(data = lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(stat="count", position = "fill") + scale_y_continuous(labels = scales::percent))
#ggplot(data=borrowers[borrowers$loan_status =="3",]) + geom_bar(aes(x=income_range_description, y=(..count..)/sum(..count..)), fill="lavender") + theme_bw() + xlab("Income Range") + ylab("Percentage") + ggtitle("Bar Chart of Borrowers' Income Range with Defaulted Loan")
category_weekday <- weekdays(lng$loan_origination_date)
ggplot(data = lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(stat="count", position = "fill") + scale_y_continuous(labels = scales::percent)
# category_month <- month(lng$loan_origination_date)
# ggplot(lng, aes(x=category_month, fill = loan_status)) + geom_bar(position = "stack")
#
# category_quarter <- quarter(lng$loan_origination_date)
# ggplot(lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(position = "stack")
#ggplot(data=borrowers[borrowers$loan_status =="3",]) + geom_bar(aes(x=income_range_description, y=(..count..)/sum(..count..)), fill="lavender") + theme_bw() + xlab("Income Range") + ylab("Percentage") + ggtitle("Bar Chart of Borrowers' Income Range with Defaulted Loan")
category_weekday <- weekdays(lng$loan_origination_date)
ggplot(data = lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Weekday", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
# category_month <- month(lng$loan_origination_date)
# ggplot(lng, aes(x=category_month, fill = loan_status)) + geom_bar(position = "stack")
#
# category_quarter <- quarter(lng$loan_origination_date)
# ggplot(lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(position = "stack")
category_weekday <- weekdays(lng$loan_origination_date)
ggplot(data = lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Weekday", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
category_month <- month(lng$loan_origination_date)
ggplot(data = lng, aes(x=category_month, fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Month", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
# category_quarter <- quarter(lng$loan_origination_date)
# ggplot(lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(position = "stack")
category_weekday <- weekdays(lng$loan_origination_date)
ggplot(data = lng, aes(x=category_weekday, fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Weekday", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
category_month <- months(lng$loan_origination_date)
ggplot(data = lng, aes(x=category_month, fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Month", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
# category_quarter <- quarter(lng$loan_origination_date)
# ggplot(lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(position = "stack")
category_weekday
class(category_weekday)
category_weekday <- weekdays(lng$loan_origination_date)
weekday_order <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
ggplot(data = lng, aes(x=factor(category_weekday, level = weekday_order), fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Weekday", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
category_month <- months(lng$loan_origination_date)
ggplot(data = lng, aes(x=category_month, fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Month", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
# category_quarter <- quarter(lng$loan_origination_date)
# ggplot(lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(position = "stack")
category_weekday <- weekdays(lng$loan_origination_date)
weekday_order <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
ggplot(data = lng, aes(x=factor(category_weekday, level = weekday_order), fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Weekday", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
category_month <- months(lng$loan_origination_date)
ggplot(data = lng, aes(x=category_month, fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Month", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
month_order <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
ggplot(data = lng, aes(x=factor(category_month, level = month_order), fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Month", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
# category_quarter <- quarter(lng$loan_origination_date)
# ggplot(lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(position = "stack")
category_weekday <- weekdays(lng$loan_origination_date)
weekday_order <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
ggplot(data = lng, aes(x=factor(category_weekday, level = weekday_order), fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Weekday", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
category_month <- months(lng$loan_origination_date)
month_order <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
ggplot(data = lng, aes(x=factor(category_month, level = month_order), fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Month", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
category_quarter <- quarter(lng$loan_origination_date)
ggplot(lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(position = "stack")
category_weekday <- weekdays(lng$loan_origination_date)
weekday_order <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
ggplot(data = lng, aes(x=factor(category_weekday, level = weekday_order), fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Weekday", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
category_month <- months(lng$loan_origination_date)
month_order <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
ggplot(data = lng, aes(x=factor(category_month, level = month_order), fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Month", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
category_quarter <- quarter(lng$loan_origination_date)
ggplot(data = lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Quarter", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
#ggplot(data = lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Quarter", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(lng, aes(x=prosper_rating, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Rating", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
# Factor listing term
lng$listing_term <- as.factor(lng$listing_term)
ggplot(lng, aes(x=listing_term, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Term (X-month)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(lng, aes(x=scorex, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="ScoreX Score", y = "Percentage")+ scale_y_continuous(labels = scales::percent)geom_bar(position = "stack")
ggplot(lng, aes(x=scorex, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="ScoreX Score", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(lng, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(lng, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
prosper_score_order <- c(2, 3,4,5,6,7,8,9,10,11)
ggplot(lng, aes(x=(prosper_score, level = prosper_score_order), fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(lng, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
View(lng)
class(lng$prosper_score)
lng$prosper_score
droplevels(lng$prosper_score[1])
droplevels(lng$prosper_score)
knitr::opts_chunk$set(echo = TRUE)
# install packages
library(ggplot2)
library(dplyr)
library(lubridate)
# set strings as factors to false
options(stringsAsFactors = FALSE)
droplevels(lng$prosper_score)
# Initial load-in of the data and observations.
lng <- read.csv("ProjectA_Listings2013.csv")
str(lng)
summary(lng)
# Data Cleaning
# Remove irrelevant observations (e.g. number_of_days, loan_status_description)
lng$number_of_days <- NULL
lng$loan_status_description <- NULL
#Step 2: Fix structural errors (e.g. loan_origination_date)
lng$loan_origination_date <- as.factor(lng$loan_origination_date)
# define original format of date
initial_format<-strptime(lng$loan_origination_date,format="%m/%d/%Y")
# define desired format of date
lng$loan_origination_date<-as.Date(initial_format,format="%m/%d/%Y")
# Factor categorical variables
lng$loan_status <- as.factor(lng$loan_status)
lng$prosper_rating <- as.factor(lng$prosper_rating)
lng$scorex <- as.factor(lng$scorex)
lng$prosper_score <- as.factor(lng$prosper_score)
lng$listing_category_id <- as.factor(lng$listing_category_id)
lng$income_range <- as.factor(lng$income_range)
lng$income_range_description <- NULL
lng$employment_status_description <- as.factor(lng$employment_status_description)
lng$occupation <- as.factor(lng$occupation)
lng$borrower_state <- as.factor(lng$borrower_state)
lng$borrower_city <- as.factor(lng$borrower_city)
lng$lender_indicator <- as.factor(lng$lender_indicator)
droplevels(lng$prosper_score)
levels(lng$prosper_score)
droplevels(lng$prosper_score == "1")
droplevels(lng$prosper_score["1"])
levels(lng$prosper_score)
knitr::opts_chunk$set(echo = TRUE)
# install packages
library(ggplot2)
library(dplyr)
library(lubridate)
# set strings as factors to false
options(stringsAsFactors = FALSE)
# Initial load-in of the data and observations.
lng <- read.csv("ProjectA_Listings2013.csv")
str(lng)
summary(lng)
# Data Cleaning
# Remove irrelevant observations (e.g. number_of_days, loan_status_description)
lng$number_of_days <- NULL
lng$loan_status_description <- NULL
#Step 2: Fix structural errors (e.g. loan_origination_date)
lng$loan_origination_date <- as.factor(lng$loan_origination_date)
# define original format of date
initial_format<-strptime(lng$loan_origination_date,format="%m/%d/%Y")
# define desired format of date
lng$loan_origination_date<-as.Date(initial_format,format="%m/%d/%Y")
# Factor categorical variables
lng$loan_status <- as.factor(lng$loan_status)
lng$prosper_rating <- as.factor(lng$prosper_rating)
lng$scorex <- as.factor(lng$scorex)
lng$prosper_score <- as.factor(lng$prosper_score)
lng$listing_category_id <- as.factor(lng$listing_category_id)
lng$income_range <- as.factor(lng$income_range)
lng$income_range_description <- NULL
lng$employment_status_description <- as.factor(lng$employment_status_description)
lng$occupation <- as.factor(lng$occupation)
lng$borrower_state <- as.factor(lng$borrower_state)
lng$borrower_city <- as.factor(lng$borrower_city)
lng$lender_indicator <- as.factor(lng$lender_indicator)
str(lng)
summary(lng)
ggplot(lng, aes(x=listing_category_id, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Category", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
category_weekday <- weekdays(lng$loan_origination_date)
weekday_order <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
ggplot(data = lng, aes(x=factor(category_weekday, level = weekday_order), fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Weekday", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
category_month <- months(lng$loan_origination_date)
month_order <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
ggplot(data = lng, aes(x=factor(category_month, level = month_order), fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Month", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + theme(axis.text.x = element_text(angle = 90,hjust =0 ))
category_quarter <- quarter(lng$loan_origination_date)
ggplot(data = lng, aes(x=category_quarter, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Quarter", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(lng, aes(x=scorex, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="ScoreX Score", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + theme(axis.text.x = element_text(angle = 90,hjust =0 ))
# Lender indicator: Segment by FALSE to get borrowers
borrowers <- subset(lng, lng$lender_indicator == 0)
plot(borrowers$loan_status, borrowers$principal_balance, xlab="Loan Status", ylab="Principal Balance")
category_weekday <- weekdays(borrowers$loan_origination_date)
weekday_order <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
ggplot(data = borrowers, aes(x=factor(category_weekday, level = weekday_order), fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Weekday", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
category_month <- months(borrowers$loan_origination_date)
month_order <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
ggplot(data = borrowers, aes(x=factor(category_month, level = month_order), fill = loan_status)) + geom_bar(stat="count", position = "fill") + labs(title = "Title") + labs(x="Month", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + theme(axis.text.x = element_text(angle = 90,hjust =0 ))
category_quarter <- quarter(borrowers$loan_origination_date)
ggplot(data = borrowers, aes(x=category_quarter, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Quarter", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
plot(borrowers$loan_status, borrowers$amount_funded, xlab="Loan Status", ylab="Amount Funded")
ggplot(borrowers, aes(x=prosper_rating, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Rating", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
plot(borrowers$loan_status, borrowers$borrower_rate, xlab="Loan Status", ylab="Borrower Rate")
# Factor listing term
borrowers$listing_term <- as.factor(borrowers$listing_term)
ggplot(borrowers, aes(x=listing_term, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Term (X-month)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
plot(borrowers$loan_status, borrowers$listing_monthly_payment, xlab="Loan Status", ylab="Monthly Payment")
ggplot(borrowers, aes(x=scorex, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="ScoreX Score", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + theme(axis.text.x = element_text(angle = 90,hjust =0 ))
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(borrowers, aes(x=listing_category_id, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Category", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + xlim(2,11)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + xlim(2,)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + xlim(2, NA)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + coord_cartesian(xlim = c(2, 11))
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + scale_x_continuous(limits = c(2, 11))
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + coord_cartesian(xlim = c(2, 11))
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + coord_cartesian(xlim = c(2.1, 11))
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + xlim(2,11)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + xlim(2:11)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + xlims(2:11)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + xlim(2:11)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + xlim(2,11)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
#ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(limits = c(0, 100))
#ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(limits = c(0, 1))
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(limits = c(0, 1))
#ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(limits = c(0, 1)) + xlim(2,11)
#ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(limits = c(0, 1)) + scale_x_continuous(limits = c(2,11))
#ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
#ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
levels(lng$prosper_score)
# Data Cleaning
# Remove irrelevant observations (e.g. number_of_days, loan_status_description)
lng$number_of_days <- NULL
lng$loan_status_description <- NULL
#Step 2: Fix structural errors (e.g. loan_origination_date)
lng$loan_origination_date <- as.factor(lng$loan_origination_date)
# define original format of date
initial_format<-strptime(lng$loan_origination_date,format="%m/%d/%Y")
# define desired format of date
lng$loan_origination_date<-as.Date(initial_format,format="%m/%d/%Y")
# Factor categorical variables
lng$loan_status <- as.factor(lng$loan_status)
lng$prosper_rating <- as.factor(lng$prosper_rating)
lng$scorex <- as.factor(lng$scorex)
prosper_score_order <- c("2",  "3",  "4",  "5",  "6",  "7",  "8",  "9",  "10", "11")
lng$prosper_score <- as.factor(lng$prosper_score, level=prosper_score_order)
# Data Cleaning
# Remove irrelevant observations (e.g. number_of_days, loan_status_description)
lng$number_of_days <- NULL
lng$loan_status_description <- NULL
#Step 2: Fix structural errors (e.g. loan_origination_date)
lng$loan_origination_date <- as.factor(lng$loan_origination_date)
# define original format of date
initial_format<-strptime(lng$loan_origination_date,format="%m/%d/%Y")
# define desired format of date
lng$loan_origination_date<-as.Date(initial_format,format="%m/%d/%Y")
# Factor categorical variables
lng$loan_status <- as.factor(lng$loan_status)
lng$prosper_rating <- as.factor(lng$prosper_rating)
lng$scorex <- as.factor(lng$scorex)
prosper_score_order <- c("2",  "3",  "4",  "5",  "6",  "7",  "8",  "9",  "10", "11")
lng$prosper_score <- factor(lng$prosper_score, level=prosper_score_order)
lng$listing_category_id <- as.factor(lng$listing_category_id)
lng$income_range <- as.factor(lng$income_range)
lng$income_range_description <- NULL
lng$employment_status_description <- as.factor(lng$employment_status_description)
lng$occupation <- as.factor(lng$occupation)
lng$borrower_state <- as.factor(lng$borrower_state)
lng$borrower_city <- as.factor(lng$borrower_city)
lng$lender_indicator <- as.factor(lng$lender_indicator)
level(lng$prosper_score)
levels(lng$prosper_score)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
# Data Cleaning
# Remove irrelevant observations (e.g. number_of_days, loan_status_description)
lng$number_of_days <- NULL
lng$loan_status_description <- NULL
#Step 2: Fix structural errors (e.g. loan_origination_date)
lng$loan_origination_date <- as.factor(lng$loan_origination_date)
# define original format of date
initial_format<-strptime(lng$loan_origination_date,format="%m/%d/%Y")
# define desired format of date
lng$loan_origination_date<-as.Date(initial_format,format="%m/%d/%Y")
# Factor categorical variables
lng$loan_status <- as.factor(lng$loan_status)
lng$prosper_rating <- as.factor(lng$prosper_rating)
lng$scorex <- as.factor(lng$scorex)
prosper_score_order <- c("2",  "3",  "4",  "5",  "6",  "7",  "8",  "9",  "10", "11")
lng$prosper_score <- factor(lng$prosper_score, level=prosper_score_order)
lng$listing_category_id <- as.factor(lng$listing_category_id)
lng$income_range <- as.factor(lng$income_range)
lng$income_range_description <- NULL
lng$employment_status_description <- as.factor(lng$employment_status_description)
lng$occupation <- as.factor(lng$occupation)
lng$borrower_state <- as.factor(lng$borrower_state)
lng$borrower_city <- as.factor(lng$borrower_city)
lng$lender_indicator <- as.factor(lng$lender_indicator)
# Lender indicator: Segment by FALSE to get borrowers
borrowers <- subset(lng, lng$lender_indicator == 0)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
levels(borrowers$prosper_score)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(borrowers, aes(x=borrowers$prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
# Data Cleaning
# Remove irrelevant observations (e.g. number_of_days, loan_status_description)
lng$number_of_days <- NULL
lng$loan_status_description <- NULL
#Step 2: Fix structural errors (e.g. loan_origination_date)
lng$loan_origination_date <- as.factor(lng$loan_origination_date)
# define original format of date
initial_format<-strptime(lng$loan_origination_date,format="%m/%d/%Y")
# define desired format of date
lng$loan_origination_date<-as.Date(initial_format,format="%m/%d/%Y")
# Factor categorical variables
lng$loan_status <- as.factor(lng$loan_status)
lng$prosper_rating <- as.factor(lng$prosper_rating)
lng$scorex <- as.factor(lng$scorex)
lng$prosper_score <- as.factor(lng$prosper_score)
lng$listing_category_id <- as.factor(lng$listing_category_id)
lng$income_range <- as.factor(lng$income_range)
lng$income_range_description <- NULL
lng$employment_status_description <- as.factor(lng$employment_status_description)
lng$occupation <- as.factor(lng$occupation)
lng$borrower_state <- as.factor(lng$borrower_state)
lng$borrower_city <- as.factor(lng$borrower_city)
lng$lender_indicator <- as.factor(lng$lender_indicator)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
knitr::opts_chunk$set(echo = TRUE)
# install packages
library(ggplot2)
library(dplyr)
library(lubridate)
# set strings as factors to false
options(stringsAsFactors = FALSE)
# Initial load-in of the data and observations.
lng <- read.csv("ProjectA_Listings2013.csv")
str(lng)
summary(lng)
# Data Cleaning
# Remove irrelevant observations (e.g. number_of_days, loan_status_description)
lng$number_of_days <- NULL
lng$loan_status_description <- NULL
#Step 2: Fix structural errors (e.g. loan_origination_date)
lng$loan_origination_date <- as.factor(lng$loan_origination_date)
# define original format of date
initial_format<-strptime(lng$loan_origination_date,format="%m/%d/%Y")
# define desired format of date
lng$loan_origination_date<-as.Date(initial_format,format="%m/%d/%Y")
# Factor categorical variables
lng$loan_status <- as.factor(lng$loan_status)
lng$prosper_rating <- as.factor(lng$prosper_rating)
lng$scorex <- as.factor(lng$scorex)
lng$prosper_score <- as.factor(lng$prosper_score)
lng$listing_category_id <- as.factor(lng$listing_category_id)
lng$income_range <- as.factor(lng$income_range)
lng$income_range_description <- NULL
lng$employment_status_description <- as.factor(lng$employment_status_description)
lng$occupation <- as.factor(lng$occupation)
lng$borrower_state <- as.factor(lng$borrower_state)
lng$borrower_city <- as.factor(lng$borrower_city)
lng$lender_indicator <- as.factor(lng$lender_indicator)
# Lender indicator: Segment by FALSE to get borrowers
borrowers <- subset(lng, lng$lender_indicator == 0)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(borrowers, aes(x=listing_category_id, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Category", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(borrowers, aes(x=scorex, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="ScoreX Score", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + theme(axis.text.x = element_text(angle = 90,hjust =0 ))
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(borrowers, aes(x=listing_category_id, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(title = "Title") + labs(x="Category", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
View(lng)
setwd("~/Winter 2022/TO 414 001 WN 2022/Project #1 - Data Exploration")
knitr::opts_chunk$set(echo = TRUE)
# Initial load-in of the data and observations.
lng <- read.csv("ProjectA_Listings2013.csv")
str(lng)
summary(lng)
# Data cleaning
lng$loan_status <- as.factor(lng$loan_status)
lng$prosper_rating <- as.factor(lng$prosper_rating)
# Make it easier to access by date
lng$loan_origination_date <- as.Date(lng$loan_origination_date, "%Y-%m-%d %H:%M:%S")
lng$scorex <- as.factor(lng$scorex)
lng$prosper_score <- as.factor(lng$prosper_score)
lng$listing_category_id <- as.factor(lng$listing_category_id)
lng$income_range <- as.factor(lng$income_range)
lng$employment_status_description <- as.factor(lng$employment_status_description)
lng$occupation <- as.factor(lng$occupation)
lng$borrower_state <- as.factor(lng$borrower_state)
lng$borrower_city <- as.factor(lng$borrower_city)
lng$lender_indicator <- as.factor(lng$lender_indicator)
# Data cleaning
lng$loan_status <- as.factor(lng$loan_status)
lng$prosper_rating <- as.factor(lng$prosper_rating)
# Make it easier to access by date
lng$loan_origination_date <- as.factor(lng$loan_origination_date)
# define original format of date
initial_format<-strptime(lng$loan_origination_date,format="%m/%d/%Y")
# define desired format of date
lng$loan_origination_date<-as.Date(initial_format,format="%m/%d/%Y")
lng$scorex <- as.factor(lng$scorex)
lng$prosper_score <- as.factor(lng$prosper_score)
lng$listing_category_id <- as.factor(lng$listing_category_id)
lng$income_range <- as.factor(lng$income_range)
lng$employment_status_description <- as.factor(lng$employment_status_description)
lng$occupation <- as.factor(lng$occupation)
lng$borrower_state <- as.factor(lng$borrower_state)
lng$borrower_city <- as.factor(lng$borrower_city)
lng$lender_indicator <- as.factor(lng$lender_indicator)
# Lender indicator: Segment by FALSE to get borrowers
borrowers <- subset(lng, lng$lender_indicator == 0)
lenders <- subset(lng, lng$lender_indicator == 1)
library(ggplot2)
library(lubridate)
ggplot(borrowers) + geom_bar(aes(x=income_range_description, y=(..count..)/sum(..count..)), fill="lavender") + theme_bw() + xlab("Income Range") + ylab("Percentage") + ggtitle("Borrowers' Income Range") + scale_y_continuous(labels = scales::percent_format(accuracy = 1))
ggplot(data=borrowers[borrowers$loan_status =="3",]) + geom_bar(aes(x=income_range_description, y=(..count..)/sum(..count..)),fill="lavender") + theme_bw() + xlab("Income Range") + ylab("Percentage") + ggtitle("Borrowers' Income Range with Defaulted Loan") + scale_y_continuous(labels = scales::percent)
ggplot(data=borrowers[borrowers$loan_status =="4",]) + geom_bar(aes(x=income_range_description, y=(..count..)/sum(..count..)), fill="lavender") + theme_bw() + xlab("Income Range") + ylab("Percentage") + ggtitle("Borrowers' Income Range with Completed Loan") + scale_y_continuous(labels = scales::percent_format(accuracy = 1))
ggplot(data=borrowers[borrowers$income_range_description!="$0",], aes(x=income_range_description, y = loan_status_description, colour=income_range_description)) + geom_jitter(alpha = 0.25) + xlab("Income Range") + ylab("Loan Status") + ggtitle("Loan Status by Borrowers' Income Range") + theme(axis.text.x = element_text(angle = 45))
knitr::opts_chunk$set(echo = TRUE)
# install packages
library(ggplot2)
library(dplyr)
library(lubridate)
# set strings as factors to false
options(stringsAsFactors = FALSE)
knitr::opts_chunk$set(echo = TRUE)
# install packages
library(ggplot2)
library(dplyr)
library(lubridate)
# set strings as factors to false
options(stringsAsFactors = FALSE)
ggplot(borrowers, aes(x=scorex, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(x="ScoreX Score", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + theme(axis.text.x = element_text(angle = 90,hjust =0 ))
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + coord_cartesian(xlim = c(2.1, 11))
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + coord_cartesian(xlim = c(2.01, 11))
ggplot(borrowers, aes(x=prosper_score, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(x="Prosper Score (11 being the best)", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + coord_cartesian(xlim = c(2.1, 11))
ggplot(borrowers, aes(x=listing_category_id, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(x="Category", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
ggplot(borrowers, aes(x=listing_category_id, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(x="Category", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + coord_cartesian(xlim = c(1.1, 20))
ggplot(borrowers, aes(x=listing_category_id, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(x="Category", y = "Percentage")+ scale_y_continuous(labels = scales::percent) + coord_cartesian(xlim = c(1, 20))
ggplot(borrowers, aes(x=listing_category_id, fill = loan_status)) + geom_bar(stat = "count", position = "fill") + labs(x="Category", y = "Percentage")+ scale_y_continuous(labels = scales::percent)
